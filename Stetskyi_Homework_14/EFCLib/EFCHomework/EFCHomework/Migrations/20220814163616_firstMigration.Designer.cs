// <auto-generated />
using System;
using EFCHomework.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCHomework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220814163616_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCHomework.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2010, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Status = "NotStarted",
                            UpdatedDate = new DateTime(2010, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2011, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Status = "Loading",
                            UpdatedDate = new DateTime(2011, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2012, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Status = "InProgress",
                            UpdatedDate = new DateTime(2012, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2013, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Status = "Arrived",
                            UpdatedDate = new DateTime(2013, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2014, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Status = "Unloading",
                            UpdatedDate = new DateTime(2014, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2015, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Status = "Cancelled",
                            UpdatedDate = new DateTime(2015, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2016, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Status = "Done",
                            UpdatedDate = new DateTime(2016, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EFCHomework.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            Height = 1m,
                            Length = 1m,
                            Weight = 1m,
                            Width = 1m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            Height = 2m,
                            Length = 2m,
                            Weight = 2m,
                            Width = 2m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description 3",
                            Height = 3m,
                            Length = 3m,
                            Weight = 3m,
                            Width = 3m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description 4",
                            Height = 4m,
                            Length = 4m,
                            Weight = 4m,
                            Width = 4m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description 5",
                            Height = 5m,
                            Length = 5m,
                            Weight = 5m,
                            Width = 5m
                        });
                });

            modelBuilder.Entity("EFCHomework.Models.Order", b =>
                {
                    b.HasOne("EFCHomework.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
